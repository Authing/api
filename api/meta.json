{
	"groups": [
		{
			"name": "用户池鉴权",
			"name-en": "init",
			"children": [ "getClientWhenSdkInit" ]
		},
		{
			"name": "用户鉴权",
			"name-en": "auth",
			"children": [ "register", "login", "decodeJwtToken", "refreshToken" ]
		},
		{
			"name": "用户管理",
			"name-en": "user",
			"children": [
				"user",
				"users",
				"checkLoginStatus",
				"removeUsers",
				"updateUser",
				"sendResetPasswordEmail",
				"verifyResetPasswordVerifyCode",
				"sendVerifyEmail",
				"changePassword",
				"unbindEmail"
			]
		},
		{
			"name": "权限控制",
			"name-en": "rbac",
			"children": [
				"createRBACGroup",
				"updateRBACGroup",
				"deleteRBACGroup",
				"deleteRBACGroupBatch",
				"rbacGroup",
				"rbacGroupList",
				"createRBACRole",
				"updateRBACRole",
				"deleteRBACRole",
				"deleteRBACRoleBatch",
				"rbacRole",
				"rbacRoleList",
				"createRBACPermission",
				"updateRBACPermission",
				"deleteRBACPermission",
				"deleteRBACPermissionBatch",
				"rbacPermission",
				"rbacPermissionList",
				"groupRoleList",
				"groupPermissionList",
				"addRoleToRBACGroup",
				"addRoleToRBACGroupBatch",
				"removeRoleFromRBACGroup",
				"removeRoleFromRBACGroupBatch",
				"groupUserList",
				"addUserToRBACGroup",
				"addUserToRBACGroupBatch",
				"removeUserFromRBACGroup",
				"removeUserFromRBACGroupBatch",
				"roleUserList",
				"assignRBACRoleToUser",
				"assignRBACRoleToUserBatch",
				"revokeRBACRoleFromUser",
				"revokeRBACRoleFromUserBatch",
				"rolePermissionList",
				"addPermissionToRBACRole",
				"addPermissionToRBACRoleBatch",
				"removePermissionFromRBACRole",
				"removePermissionFromRBACRoleBatch",
				"userPermissionList",
				"userGroupList",
				"userRoleList"
			]
		},
		{
			"name": "组织机构管理",
			"name-en": "org",
			"children": [
				"createOrg",
				"addOrgNode",
				"removeOrgNode",
				"deleteOrg",
				"org",
				"orgs",
				"orgChildrenNodes",
				"isRootNodeOfOrg",
				"orgRootNode"
			]
		},
		{
			"name": "权限控制「废弃」",
			"name-en": "role",
			"children": [
				"clientRoles",
				"queryRoleByUserId",
				"createRole",
				"updateRole",
				"assignUserToRole",
				"removeUserFromGroup",
				"usersInGroup"
			]
		},
		{
			"name": "用户池管理",
			"name-en": "userpool",
			"children": [
				"userClients",
				"client",
				"userClientTypes",
				"queryPermissionList",
				"isClientBelongToUser",
				"removeUserClients",
				"updateUserClient"
			]
		},
		{
			"name": "社会化登录",
			"name-en": "social",
			"children": [ "bindOtherOAuth", "unbindOtherOAuth" ]
		},
		{
			"name": "扩展能力",
			"name-en": "extensibility",
			"children": [ "createRule" ]
		},
		{
			"name": "注册白名单",
			"name-en": "invitation",
			"children": [
				"setInvitationState",
				"queryInvitationState",
				"addToInvitation",
				"removeFromInvitation",
				"queryInvitation"
			]
		},
		{
			"name": "MFA 多因素认证",
			"name-en": "mfa",
			"children": [ "queryMFA", "changeMFA" ]
		},
		{
			"name": "WebHook API",
			"name-en": "webhook",
			"children": [
				"addClientWebhook",
				"getAllWebhooks",
				"getWebhookLogs",
				"getWebhookLogDetail",
				"getWebhookSettingOptions",
				"updateClientWebhook",
				"deleteClientWebhook",
				"SendWebhookTest"
			]
		},
		{
			"name": "OAuth API",
			"name-en": "oauth",
			"children": [ "LoginByLDAP", "GetUserAuthorizedApps", "RevokeUserAuthorizedApp" ]
		}
	],
	"auth": {
		"admin": [
			"users",
			"removeUsers",
			"clientRoles",
			"createRole",
			"updateRole",
			"assignUserToRole",
			"removeUserFromGroup",
			"usersInGroup",
			"userClients",
			"client",
			"userClientTypes",
			"queryPermissionList",
			"removeUserClients",
			"updateUserClient",
			"setInvitationState",
			"queryInvitationState",
			"addToInvitation",
			"removeFromInvitation",
			"queryInvitation",
			"addClientWebhook",
			"getAllWebhooks",
			"getWebhookLogs",
			"getWebhookLogDetail",
			"getWebhookSettingOptions",
			"updateClientWebhook",
			"deleteClientWebhook",
			"SendWebhookTest",
			"createOrg",
			"addOrgNode",
			"removeOrgNode",
			"deleteOrg",
			"org",
			"orgs",
			"orgChildrenNodes",
			"isRootNodeOfOrg",
			"orgRootNode",
			"createRBACGroup",
			"updateRBACGroup",
			"deleteRBACGroup",
			"deleteRBACGroupBatch",
			"rbacGroup",
			"rbacGroupList",
			"createRBACRole",
			"updateRBACRole",
			"deleteRBACRole",
			"deleteRBACRoleBatch",
			"rbacRole",
			"rbacRoleList",
			"createRBACPermission",
			"updateRBACPermission",
			"deleteRBACPermission",
			"deleteRBACPermissionBatch",
			"rbacPermission",
			"rbacPermissionList",
			"groupRoleList",
			"groupPermissionList",
			"addRoleToRBACGroup",
			"addRoleToRBACGroupBatch",
			"removeRoleFromRBACGroup",
			"removeRoleFromRBACGroupBatch",
			"groupUserList",
			"addUserToRBACGroup",
			"addUserToRBACGroupBatch",
			"removeUserFromRBACGroup",
			"removeUserFromRBACGroupBatch",
			"roleUserList",
			"assignRBACRoleToUser",
			"assignRBACRoleToUserBatch",
			"revokeRBACRoleFromUser",
			"revokeRBACRoleFromUserBatch",
			"rolePermissionList",
			"addPermissionToRBACRole",
			"addPermissionToRBACRoleBatch",
			"removePermissionFromRBACRole",
			"removePermissionFromRBACRoleBatch",
			"createRule"
		],
		"user": [
			"refreshToken",
			"user",
			"updateUser",
			"sendResetPasswordEmail",
			"unbindEmail",
			"queryRoleByUserId",
			"bindOtherOAuth",
			"unbindOtherOAuth",
			"queryMFA",
			"changeMFA",
			"GetUserAuthorizedApps",
			"RevokeUserAuthorizedApp",
			"userPermissionList",
			"userGroupList",
			"userRoleList"
		],
		"guest": [
			"getClientWhenSdkInit",
			"register",
			"login",
			"decodeJwtToken",
			"checkLoginStatus",
			"verifyResetPasswordVerifyCode",
			"sendVerifyEmail",
			"changePassword",
			"isClientBelongToUser",
			"LoginByLDAP"
		]
	}
}
